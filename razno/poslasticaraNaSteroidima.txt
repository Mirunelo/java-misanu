# Download Java MySQL Connector: https://dev.mysql.com/downloads/connector/j/
# Staviti u folder projekta. U Eclipse desno dugme na projekat pa:
# Build Path/Add External Archives/ izabrati mysql-connector-j-8.0.*

#############
###   A   ###
#############

CREATE DATABASE poslasticara

CREATE TABLE poslasticare(
    poslasticaraID int PRIMARY KEY,
    naziv varchar(45) NOT null,
    grad varchar(60) NOT null,
    ulica varchar(100) NOT null,
    broj varchar(10) NOT null
)ENGINE = INNODB;

CREATE TABLE sladoledi(
    sladoledID int PRIMARY KEY,
    nazivSladoleda varchar(45) NOT null
)ENGINE = INNODB;

CREATE TABLE poslasticaresladoledi(
    poslasticaraSladoledID int PRIMARY KEY AUTO_INCREMENT,
    poslasticaraID int NOT null,
    sladoledID int NOT null,
    FOREIGN KEY (poslasticaraID) REFERENCES poslasticare (poslasticaraID)
    ON UPDATE CASCADE
    ON DELETE NO ACTION,
    FOREIGN KEY (sladoledID) REFERENCES sladoledi (sladoledID)
    ON UPDATE CASCADE
    ON DELETE NO ACTION
)ENGINE = INNODB;

CREATE TABLE deca(
    deteID int PRIMARY KEY,
    ime varchar(45) NOT null,
    prezime varchar(45) NOT null,
    najdraziSladoled varchar(45) NOT null
)ENGINE = INNODB;

CREATE TABLE poslasticaredeca(
    poslasticaraDeteID int PRIMARY KEY AUTO_INCREMENT,
    poslasticaraID int NOT null,
    deteID int NOT null,
    FOREIGN KEY (poslasticaraID) REFERENCES poslasticare (poslasticaraID)
    ON UPDATE CASCADE
    ON DELETE NO ACTION,
    FOREIGN KEY (deteID) REFERENCES deca (deteID)
    ON UPDATE CASCADE
    ON DELETE NO ACTION
)ENGINE = INNODB;

CREATE TABLE decasladoledi(
    detesladoledID int PRIMARY KEY AUTO_INCREMENT,
    kolicina int NOT null,
    deteID int NOT null,
    sladoledID int NOT null,
    FOREIGN KEY (deteID) REFERENCES deca (deteID)
    ON UPDATE CASCADE
    ON DELETE NO ACTION,
    FOREIGN KEY (sladoledID) REFERENCES sladoledi (sladoledID)
    ON UPDATE CASCADE
    ON DELETE NO ACTION
)ENGINE = INNODB;

####################################
###   B je u MySQL Workbench-u   ###
####################################

#############
###   V   ###
#############

INSERT INTO `poslasticare`(`poslasticaraID`, `naziv`, `grad`, `ulica`, `broj`)
VALUES (1,'Trtko','Valjevo','Dositejeva','4a'), (2,'SladiЕЎa','Zemun','OraДЌka','17b'), (3,'Korny','Novi Sad','Geteova','17b');

INSERT INTO `sladoledi`(`sladoledID`, `nazivSladoleda`)
VALUES (1,'SneЕЎko'), (2, 'Jagoda'), (3, 'Miks'), (4, 'ДЊoko'), (5, 'Vanila'), (6, 'Kekson');

INSERT INTO `deca`(`deteID`, `ime`, `prezime`, `najdraziSladoled`)
VALUES (1,'Pera','PeriД‡','Miks'), (2,'ЕЅika','ЕЅikiД‡','Jagoda'), (3, 'Dejan', 'DejanoviД‡', 'SneЕЎko');

INSERT INTO `poslasticaresladoledi`(`poslasticaraID`, `sladoledID`)
VALUES (1, 2), (1,3), (1,4), (2,3), (2,2), (2,1), (3,4), (3,5), (3, 6);

INSERT INTO `poslasticaredeca`(`poslasticaraID`, `deteID`)
VALUES (1,1),(1,2),(1,3),(2,1),(2,2),(3,2),(3,3);

INSERT INTO `decasladoledi`(`kolicina`, `deteID`, `sladoledID`)
VALUES ( 2, 1, 1), ( 1, 2, 2), ( 1, 3, 3), ( 2, 2, 4), ( 1, 3, 5), ( 1, 1, 6), ( 3, 3, 2), ( 2, 2, 4);

#############################################
###   G i D je JAVA projekat u Eclips-u   ###
#############################################

#############
###   Дђ   ###
#############

CREATE VIEW nazivisvihsladoleda AS
SELECT nazivSladoleda
FROM `sladoledi`

SELECT *
FROM `nazivisvihsladoleda`

#############
###   E   ###
#############

CREATE TABLE najprodavanijisladoledi(
    najprodavanijisladoledID int PRIMARY KEY AUTO_INCREMENT,
    najprodavanijisladoled varchar(45)
)ENGINE = INNODB;

DELIMITER //
CREATE TRIGGER `najprodavanijisladoledi` AFTER INSERT ON `decasladoledi` FOR EACH ROW
BEGIN
INSERT INTO `najprodavanijisladoledi`(`najprodavanijisladoled`)
VALUES ( (SELECT s.nazivSladoleda
FROM `decasladoledi` AS d INNER JOIN `sladoledi` AS s
USING(sladoledID)
GROUP BY sladoledID
HAVING SUM(kolicina) = (SELECT SUM(kolicina)
                        FROM `decasladoledi`
                        GROUP BY sladoledID
                        ORDER BY SUM(kolicina) DESC LIMIT 1) LIMIT 1) );
END //
DELIMITER ;

# Dupli LIMIT 1 je tu jer se deЕЎava da su dva ili viЕЎe sladoleda najprodavaniji i onda trigger ne moЕѕe da upiЕЎe dve vrednosti i podatak o prodaji ne moЕѕe da proД‘e. Vrlo nezgodan trigger :)

Dete id 3, kupilo 4 sladoleda id 6:
INSERT INTO `decasladoledi`(`kolicina`, `deteID`, `sladoledID`) VALUES (2,1,4)

#############
###   ЕЅ   ###
#############

DELIMITER //
CREATE FUNCTION maxnosladoled() RETURNS INT
DETERMINISTIC
BEGIN
 RETURN (SELECT COUNT(sladoledID) FROM `poslasticaresladoledi`);
end //
DELIMITER ;

SELECT maxnosladoled() AS "Ukupan broj sladoleda koji se prodaju u svim poslastiДЌarnicama"

#############
###   Z   ###
#############

DELIMITER //
CREATE PROCEDURE posldete()
BEGIN
 SELECT DISTINCT p.naziv AS "PoslastiДЌare koje poseД‡uje bar jedno dete"
 FROM poslasticare AS p JOIN poslasticaredeca AS pd
 USING(poslasticaraID);
END //
DELIMITER ;

CALL posldete();

#############
###   I   ###
#############

SELECT CONCAT(d.ime, ' ', d.prezime) AS 'Deca koja poseД‡uju SAMO poslastiДЌare koje prodaju njihov najdraЕѕi sladoled'
FROM `poslasticaredeca` AS pd JOIN deca AS d
USING(deteID)
GROUP BY pd.deteID
HAVING COUNT(pd.poslasticaraID) = (SELECT count(ps.poslasticaraID)
                                   FROM deca AS d JOIN sladoledi AS s
                                   ON d.najdraziSladoled = s.nazivSladoleda
                                   JOIN poslasticaresladoledi AS ps
                                   USING(sladoledID)
                                   JOIN poslasticaredeca AS pd
                                   USING(deteID, poslasticaraID)
                                   GROUP BY d.deteID
                                   HAVING d.deteID = pd.deteID);


############################# KRAJ... ###########################

### PriДЌa koja prati zadatak pod I)...

### MoЕѕda moЕѕe prostije ovo pod I)...
### Krenuo sam od sledeД‡eg upita...
### koji je davao jako lepo reЕЎenje na vrlo prost i jednostavan naДЌin, ali naЕѕalost ne i to koje se traЕѕi :(

SELECT DISTINCT CONCAT(d.ime, ' ', d.prezime) AS 'PoseД‡uju poslastiДЌare koje prodaju njihov najdraЕѕi sladoled'
FROM deca AS d JOIN sladoledi AS s
ON d.najdraziSladoled = s.nazivSladoleda
JOIN poslasticaresladoledi AS ps
USING(sladoledID)
JOIN poslasticaredeca AS pd
USING(deteID, poslasticaraID)

### zatim sam prebrojao poslastiДЌare u koje su iЕЎli ID dece, a imaju njihov najdraЕѕi sladoled

SELECT d.deteID, count(ps.poslasticaraID)
FROM deca AS d JOIN sladoledi AS s
ON d.najdraziSladoled = s.nazivSladoleda
JOIN poslasticaresladoledi AS ps
USING(sladoledID)
JOIN poslasticaredeca AS pd
USING(deteID, poslasticaraID)
GROUP BY d.deteID

### Pa sam prebrojao u koliko su poslastiДЌara deca iЕЎla da kupuju sladolede

SELECT pd.deteID, COUNT(pd.poslasticaraID)
FROM `poslasticaredeca` AS pd
GROUP BY pd.deteID

### ZakljuДЌio sam da ova dva prebrojavanja poslastiДЌara moraju da se slaЕѕu jer u suprotnom
### je dete iЕЎlo i u poslatiДЌare koje nemaju njegov omiljeni sladoled
### i na kraju sam doЕЎao do reЕЎenja, ali me je to reЕЎenje koЕЎtalo vremena tj. pola danaЕЎnjeg dana :)

SELECT CONCAT(d.ime, ' ', d.prezime) AS 'Deca koja poseД‡uju SAMO poslastiДЌare koje prodaju njihov najdraЕѕi sladoled'
FROM `poslasticaredeca` AS pd JOIN deca AS d
USING(deteID)
GROUP BY pd.deteID
HAVING COUNT(pd.poslasticaraID) = (SELECT count(ps.poslasticaraID)
                                   FROM deca AS d JOIN sladoledi AS s
                                   ON d.najdraziSladoled = s.nazivSladoleda
                                   JOIN poslasticaresladoledi AS ps
                                   USING(sladoledID)
                                   JOIN poslasticaredeca AS pd
                                   USING(deteID, poslasticaraID)
                                   GROUP BY d.deteID
                                   HAVING d.deteID = pd.deteID);

### Ako se ja pitam, sve ono od A do Z nosi po jedan poen, a ovo vredi bar 91 :)))

### Ako mi na kraju neko kaЕѕe da ovo reЕЎenje nije taДЌno, odoh da se udavim u mutno Dunavo :)



### Ovo sam unosio pride da pokuЕЎam da proverim da li je sve taДЌno
### Ne mora da znaДЌi da jeste :)

INSERT INTO `poslasticaresladoledi`(`poslasticaraID`, `sladoledID`)
VALUES (4, 1), (4,3), (4,5), (5,2), (5,4), (5,6), (6,4), (6,1), (6, 6);

INSERT INTO `poslasticaredeca`(`poslasticaraID`, `deteID`)
VALUES (5,1),(5,3),(6,2);

INSERT INTO `decasladoledi`(`kolicina`, `deteID`, `sladoledID`)
VALUES ( 1, 3, 5);

INSERT INTO `decasladoledi`(`kolicina`, `deteID`, `sladoledID`)
VALUES ( 1, 2, 1);

INSERT INTO `decasladoledi`(`kolicina`, `deteID`, `sladoledID`)
VALUES ( 1, 1, 6);

INSERT INTO `deca`(`deteID`, `ime`, `prezime`, `najdraziSladoled`)
VALUES (4,'Marko','MarkoviД‡','Kekson');

INSERT INTO `decasladoledi`(`kolicina`, `deteID`, `sladoledID`)
VALUES ( 2, 4, 6);

INSERT INTO `poslasticaredeca`(`poslasticaraID`, `deteID`)
VALUES (6,4);

INSERT INTO `deca`(`deteID`, `ime`, `prezime`, `najdraziSladoled`)
VALUES (5,'Lazar','LazareviД‡','Vanila');

INSERT INTO `decasladoledi`(`kolicina`, `deteID`, `sladoledID`)
VALUES ( 5, 5, 5), (1, 5, 1);

INSERT INTO `poslasticaredeca`(`poslasticaraID`, `deteID`)
VALUES (3, 5), (4, 5);

### JAVA ###

Kroz JAVA konekciju sam uneo:
4, Carstvo Sladoleda, ZajeДЌar, Kopernikova, 34c
	
5, Ledeni ДЊika, Vranje, Kralja Aleksandra, 12
	
6, Bucko, Kraljevo, Viktora Bubnja, 43